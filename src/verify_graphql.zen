# SPDX-License-Identifier: AGPL-3.0-or-later
# Copyright (C) 2022-2023 Dyne.org foundation <foundation@dyne.org>.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

Scenario eddsa: verify the signature of a graph query

Given I have a 'base64' named 'gql'
Given I have a 'base64' named 'eddsa signature'
Given I have a 'base58' named 'eddsa public key'

# check that the graph query is reentrant
# When I create the count of char '{' found in 'graphql'
# and I rename 'count' to 'open'
# and I create the count of char '}' found in 'graphql'
# and I remove 'count'
# and I remove 'open'
# When I create the count of char '(' found in 'graphql'
# and I rename 'count' to 'open'
# and I create the count of char ')' found in 'graphql'
# and I remove 'count'
# and I remove 'open'
# When I create the count of char '[' found in 'graphql'
# and I rename 'count' to 'open'
# and I create the count of char ']' found in 'graphql'
# and I verify 'count' is equal to 'open'

# Fix Apollo's mingling with query string
When I remove spaces in 'gql'
and I compact ascii strings in 'gql'
When I verify the 'gql' has a eddsa signature in 'eddsa signature' by 'eddsa public key'

Then print the string '1'
